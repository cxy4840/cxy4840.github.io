<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Research Program</title>
    <link href="/2023/05/07/Research%20Program/"/>
    <url>/2023/05/07/Research%20Program/</url>
    
    <content type="html"><![CDATA[<h1 id="Research-Program-Remote-interactive-modular-diagnostic-and-therapeutic-training-robot"><a href="#Research-Program-Remote-interactive-modular-diagnostic-and-therapeutic-training-robot" class="headerlink" title="Research Program: Remote interactive modular diagnostic and therapeutic training robot."></a>Research Program: Remote interactive modular diagnostic and therapeutic training robot.</h1>]]></content>
    
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PyQt5 Learning Record.</title>
    <link href="/2023/03/02/%5BPyQt5%20Learning%20Record%5D/"/>
    <url>/2023/03/02/%5BPyQt5%20Learning%20Record%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="PyQt5–Multithreading-Wrong-demonstration-and-correct-demonstration-for-PyQt5-interface-of-multithreading"><a href="#PyQt5–Multithreading-Wrong-demonstration-and-correct-demonstration-for-PyQt5-interface-of-multithreading" class="headerlink" title="PyQt5–Multithreading: Wrong demonstration and correct demonstration for PyQt5 interface of multithreading"></a>PyQt5–Multithreading: Wrong demonstration and correct demonstration for PyQt5 interface of multithreading</h1><p>I recently intended to package the whole system into a QT GUI interface and found that I needed to use multiple threads to satisfy my need to open multiple ROS processes and VirtualBox software at the same time, and there’re some problems I’ve meet. Here are demonstrations of the wrong one and the correct one:</p><h2 id="1-Wrong-way-of-putting-functions-that-require-multiple-threads-to-be-performed-outside-of-the-RunThread-function"><a href="#1-Wrong-way-of-putting-functions-that-require-multiple-threads-to-be-performed-outside-of-the-RunThread-function" class="headerlink" title="1. Wrong way of putting functions that require multiple threads to be performed outside of the RunThread() function"></a>1. Wrong way of putting functions that require multiple threads to be performed outside of the RunThread() function</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#-*- coding:utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">PushButton</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>__author__ = <span class="hljs-string">&#x27;Xiaoyu Cai&#x27;</span><br><br><span class="hljs-keyword">import</span> sys,os,time<br><span class="hljs-keyword">from</span> PyQt5.QtCore <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> PyQt5.QtGui <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> PyQt5.QtWidgets <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">test_time</span>(<span class="hljs-params">fuc1</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;Decorators, Measurement Blocking Timing&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">train</span>(<span class="hljs-params">self</span>):<br>        start_time = time.time()<br>        res = fuc1(self)<br>        end_time = time.time()<br>        <span class="hljs-built_in">print</span> (end_time-start_time)<br>        <span class="hljs-keyword">return</span> res<br>    <span class="hljs-keyword">return</span> train<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TabDemo</span>(QTabWidget,QThread):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>(TabDemo, self).__init__(parent)<br>        self.setGeometry(<span class="hljs-number">200</span>,<span class="hljs-number">500</span>,<span class="hljs-number">500</span>,<span class="hljs-number">200</span>)<br>        self.tab1 = QWidget()<br>        self.tab2 = QWidget()<br>        self.tab3 = QWidget()<br>        self.addTab(self.tab1,<span class="hljs-string">&#x27;xxx&#x27;</span>)<br>        self.addTab(self.tab2,<span class="hljs-string">&#x27;xxx&#x27;</span>)<br>        self.tab1UI()<br>        self.tab2UI()<br>        <span class="hljs-comment"># self.tab3UI()</span><br>        self.setWindowTitle(<span class="hljs-string">&quot;xxxxx&quot;</span>)<br>        <br>        self.show()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tab1UI</span>(<span class="hljs-params">self</span>):<br>        layout = QFormLayout()<br>        launch = QHBoxLayout()<br>        setupTouch = QPushButton(<span class="hljs-string">&quot;Open Touch_Setup&quot;</span>)<br>        launch.addWidget(setupTouch)<br>        setupTouch.clicked.connect(self.openTouchShell)<br>        roslaunchGeomagic = QPushButton(<span class="hljs-string">&quot;Roslanuch Geomagic&quot;</span>)<br>        launch.addWidget(roslaunchGeomagic)<br>        roslaunchGeomagic.clicked.connect(self.threadOpenGeomagic)<br>        layout.addRow(QLabel(<span class="hljs-string">&quot;Launcher&quot;</span>), launch)<br>        <span class="hljs-comment"># layout.addRow(&quot;生日&quot;, QLineEdit())</span><br>        self.tab1.setLayout(layout)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tab2UI</span>(<span class="hljs-params">self</span>):<br>        layout = QFormLayout()<br>        layout.addRow(<span class="hljs-string">&#x27;Local IP address:&#x27;</span>,QLineEdit(self.get_host_ip()))<br>        layout.addRow(<span class="hljs-string">&quot;Target IP address&quot;</span>, QLineEdit())<br>        openVirtualBox = QPushButton(<span class="hljs-string">&quot;Open VirtualBox&quot;</span>)<br>        layout.addWidget(openVirtualBox)<br>        openVirtualBox.clicked.connect(self.threadVirtualBox)<br>        self.tab2.setLayout(layout)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_host_ip</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-built_in">str</span>:<br>        <span class="hljs-string">&#x27;&#x27;&#x27;Obtain local IP address&#x27;&#x27;&#x27;</span><br>        <span class="hljs-keyword">try</span>:<br>            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)<br>            s.connect((<span class="hljs-string">&#x27;8.8.8.8&#x27;</span>, <span class="hljs-number">80</span>))<br>            ip = s.getsockname()[<span class="hljs-number">0</span>]<br>            <span class="hljs-comment"># print(ip)</span><br>            <span class="hljs-comment"># ipaddress = str(ip)</span><br>            <span class="hljs-keyword">return</span> ip<br>        <span class="hljs-keyword">finally</span>:<br>            s.close()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">openTouchShell</span>(<span class="hljs-params">self</span>):<br>        os.system(<span class="hljs-string">&quot;cd xxx/Touch_Setup&quot;</span>)<br>        <span class="hljs-comment"># chmod a+x /home/xx/my.sh;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">openGeomagic</span>(<span class="hljs-params">self</span>):<br>        os.system(<span class="hljs-string">&quot;roslaunch geomagic_control geomagic.launch&quot;</span>)<br>    <span class="hljs-comment">#The wrong use of thread, trying to use threadXXX to open a key, will not actually enter the thread process!</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">threadOpenGeomagic</span>(<span class="hljs-params">self</span>):<br>        self.thread2 = RunThread()<br>        self.thread2.trigger.connect(self.openGeomagic)<br>        self.thread2.start()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">threadVirtualBox</span>(<span class="hljs-params">self</span>):<br>        self.thread3 = RunThread()<br>        self.thread3.trigger.connect(self.VirtualBox)<br>        self.thread3.start()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">VirtualBox</span>(<span class="hljs-params">self</span>):<br>        os.system(<span class="hljs-string">&quot;virtualbox&quot;</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RunThread</span>(<span class="hljs-title class_ inherited__">QThread</span>):<br>    trigger = pyqtSignal(<span class="hljs-built_in">str</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>(RunThread, self).__init__()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># wechat.start_auto(self.callback)</span><br>        <span class="hljs-comment"># self._signal.emit(msg);  </span><br>        self.trigger.emit(<span class="hljs-string">&quot;ok&quot;</span>)<br>        <span class="hljs-comment"># self._signal.emit(msg)</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">self, msg</span>):<br>        <span class="hljs-comment"># self._signal.emit(msg)</span><br>        <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># print(get_host_ip())</span><br>    app = QApplication(sys.argv)<br>    <span class="hljs-comment"># ip = IPv4AddrLineEdit()</span><br>    <span class="hljs-comment"># ip.show()</span><br>    ex = TabDemo()<br><br>    sys.exit(app.exec_()) <br><br></code></pre></td></tr></table></figure><h2 id="2-Right-demonstration-place-a-keystroke-or-command-that-requires-multiple-threads-under-the-class-RunThread"><a href="#2-Right-demonstration-place-a-keystroke-or-command-that-requires-multiple-threads-under-the-class-RunThread" class="headerlink" title="2. Right demonstration: place a keystroke or command that requires multiple threads under the class RunThread()"></a>2. Right demonstration: place a keystroke or command that requires multiple threads under the class RunThread()</h2><blockquote><p>I am inspired by the phrase below:</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">RunThread</span>(<span class="hljs-title class_ inherited__">QThread</span>):<br>    trigger = pyqtSignal(<span class="hljs-built_in">str</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>(RunThread, self).__init__()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># Handle the business logic you want to do, here the data is handled through a callback, here the logic is handled write your own method</span><br>        <span class="hljs-comment"># wechat.start_auto(self.callback)</span><br>        <span class="hljs-comment"># self._signal.emit(msg);  You can write the signal emit here.</span><br>        self.VirtualBox()<br>        self.trigger.emit(<span class="hljs-string">&quot;ok&quot;</span>)<br>        <span class="hljs-comment"># self._signal.emit(msg)</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>“Handle the business logic you want to do, here the data is handled through a callback, here the logic is handled write your own method”</strong></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#-*- coding:utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">PushButton</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>__author__ = <span class="hljs-string">&#x27;Xiaoyu Cai&#x27;</span><br><br><span class="hljs-keyword">import</span> sys,os,time<br><span class="hljs-keyword">from</span> PyQt5.QtCore <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> PyQt5.QtGui <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> PyQt5.QtWidgets <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> socket<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Tabs</span>(QTabWidget,QThread):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;This class is used to create a QT interface with an options page&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>(Tabs, self).__init__(parent)<br>        self.setGeometry(<span class="hljs-number">200</span>,<span class="hljs-number">500</span>,<span class="hljs-number">500</span>,<span class="hljs-number">200</span>)<br>        self.tab1 = QWidget()<br>        self.tab2 = QWidget()<br>        self.tab3 = QWidget()<br>        self.addTab(self.tab1,<span class="hljs-string">&#x27;I&#x27;</span>)<br>        self.addTab(self.tab2,<span class="hljs-string">&#x27;II&#x27;</span>)<br>        self.tab1UI()<br>        self.tab2UI()<br>        <span class="hljs-comment"># self.tab3UI()</span><br>        self.setWindowTitle(<span class="hljs-string">&quot;III&quot;</span>)<br>        <br>        self.show()<br>    <span class="hljs-comment">#Create a first option page</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tab1UI</span>(<span class="hljs-params">self</span>):<br>        layout = QFormLayout()<br>        launch = QHBoxLayout()<br><br>        <span class="hljs-comment">#Touch&#x27;s Button&#x27;</span><br>        setupTouch = QPushButton(<span class="hljs-string">&quot;Touch_Setup&quot;</span>)<br>        launch.addWidget(setupTouch)<br>        <span class="hljs-comment"># Associate to &#x27;open Touch&#x27; multithreaded function</span><br>        setupTouch.clicked.connect(self.openTouchShell)<br><br>        <span class="hljs-comment"># Geomagic&#x27;s button&#x27;</span><br>        roslaunchGeomagic = QPushButton(<span class="hljs-string">&quot;Roslanuch Geomagic&quot;</span>)<br>        launch.addWidget(roslaunchGeomagic)<br>        <span class="hljs-comment"># Associate to &#x27;open Geomagic&#x27; multithreaded function</span><br>        roslaunchGeomagic.clicked.connect(self.openGeomagic)<br><br>        layout.addRow(QLabel(<span class="hljs-string">&quot;Launcher&quot;</span>), launch)<br>        self.tab1.setLayout(layout)<br><br>    <span class="hljs-comment">#Create a second option page</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tab2UI</span>(<span class="hljs-params">self</span>):<br>        targetIPAdress = <span class="hljs-built_in">str</span><br>        layout = QFormLayout()<br>        layout.addRow(<span class="hljs-string">&#x27;Local IP address:&#x27;</span>,QLineEdit(self.get_host_ip()))<br>        <span class="hljs-comment"># Enter the IP address of the target robot</span><br>        layout.addRow(<span class="hljs-string">&quot;Target IP address&quot;</span>, QLineEdit(targetIPAdress))<br>        <br>        <span class="hljs-comment"># VirtualBox&#x27;s Button</span><br>        openVirtualBox = QPushButton(<span class="hljs-string">&quot;打开VirtualBox&quot;</span>)<br>        layout.addWidget(openVirtualBox)<br>        <span class="hljs-comment"># Associate to &#x27;open VirtualBox&#x27; multithreaded function</span><br>        openVirtualBox.clicked.connect(self.virtualBox)<br>        self.tab2.setLayout(layout)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_host_ip</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-built_in">str</span>:<br>        <span class="hljs-string">&#x27;&#x27;&#x27;Get local IP address&#x27;&#x27;&#x27;</span><br>        <span class="hljs-keyword">try</span>:<br>            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)<br>            s.connect((<span class="hljs-string">&#x27;8.8.8.8&#x27;</span>, <span class="hljs-number">80</span>))<br>            ip = s.getsockname()[<span class="hljs-number">0</span>]<br>            <span class="hljs-comment"># print(ip)</span><br>            <span class="hljs-comment"># ipaddress = str(ip)</span><br>            <span class="hljs-keyword">return</span> ip<br>        <span class="hljs-keyword">finally</span>:<br>            s.close()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">openTouchShell</span>(<span class="hljs-params">self</span>):<br>        self.thread = TouchThread()<br>        self.thread.start()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">openGeomagic</span>(<span class="hljs-params">self</span>):<br>        self.thread2 = GeomagicThread()<br>        self.thread2.start()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">virtualBox</span>(<span class="hljs-params">self</span>):<br>        self.thread3 = VirtualBoxThread()<br>        self.thread3.start()<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TouchThread</span>(<span class="hljs-title class_ inherited__">QThread</span>):<br>    trigger = pyqtSignal(<span class="hljs-built_in">str</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>(TouchThread, self).__init__()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        self.openTouchShell()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">openTouchShell</span>(<span class="hljs-params">self</span>):<br>        os.system(<span class="hljs-string">&quot;cd xxx/Touch_Setup&quot;</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">self, msg</span>):<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GeomagicThread</span>(<span class="hljs-title class_ inherited__">QThread</span>):<br>    trigger = pyqtSignal(<span class="hljs-built_in">str</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>(GeomagicThread, self).__init__()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        self.openGeomagic()<br>        self.trigger.emit(<span class="hljs-string">&quot;ok&quot;</span>)<br>        <span class="hljs-comment"># self._signal.emit(msg)</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">openGeomagic</span>(<span class="hljs-params">self</span>):<br>        os.system(<span class="hljs-string">&quot;roslaunch geomagic_control geomagic.launch&quot;</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">self, msg</span>):<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">VirtualBoxThread</span>(<span class="hljs-title class_ inherited__">QThread</span>):<br>    trigger = pyqtSignal(<span class="hljs-built_in">str</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>(VirtualBoxThread, self).__init__()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># wechat.start_auto(self.callback)</span><br>        <span class="hljs-comment"># self._signal.emit(msg);  </span><br>        self.VirtualBox()<br>        self.trigger.emit(<span class="hljs-string">&quot;ok&quot;</span>)<br>        <span class="hljs-comment"># self._signal.emit(msg)</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">VirtualBox</span>(<span class="hljs-params">self</span>):<br>        os.system(<span class="hljs-string">&quot;virtualbox&quot;</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">self, msg</span>):<br>        <span class="hljs-comment"># self._signal.emit(msg)</span><br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># print(get_host_ip())</span><br>    app = QApplication(sys.argv)<br>    <span class="hljs-comment"># ip = IPv4AddrLineEdit()</span><br>    <span class="hljs-comment"># ip.show()</span><br>    ex = TabDemo()<br><br>    sys.exit(app.exec_()) <br><br></code></pre></td></tr></table></figure><p>The above code allows multiple threads of tasks to be performed in a single GUI interface without the GUI interface going into a blocking stuck state.</p>]]></content>
    
    
    
    <tags>
      
      <tag>PyQt5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WSL Learning Record [I]</title>
    <link href="/2023/02/07/%5BWSL%20Learning%20Record%5D/"/>
    <url>/2023/02/07/%5BWSL%20Learning%20Record%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="WSL-Learning-Record-I-Ubuntu-20-04-ROS2-foxy-for-WSL2-virtualization-under-Win11"><a href="#WSL-Learning-Record-I-Ubuntu-20-04-ROS2-foxy-for-WSL2-virtualization-under-Win11" class="headerlink" title="WSL Learning Record [I]: Ubuntu 20.04 ROS2_foxy for WSL2 virtualization under Win11"></a>WSL Learning Record [I]: Ubuntu 20.04 ROS2_foxy for WSL2 virtualization under Win11</h1><h2 id="A-Why-we-use-WSL2-virtualization-instead-of-VMware-or-Orical-Virtualbox"><a href="#A-Why-we-use-WSL2-virtualization-instead-of-VMware-or-Orical-Virtualbox" class="headerlink" title="A. Why we use WSL2 virtualization instead of VMware or Orical Virtualbox?"></a>A. Why we use WSL2 virtualization instead of VMware or Orical Virtualbox?</h2><ol><li>VMware is not light enough</li><li>Vmware can’t call the graphics configuration, and in my project I need to use a discrete graphics card to render gazebo.</li></ol><h2 id="B-How-to-achieve-it"><a href="#B-How-to-achieve-it" class="headerlink" title="B. How to achieve it?"></a>B. How to achieve it?</h2><h3 id="1-Hardware-configuration-requirements"><a href="#1-Hardware-configuration-requirements" class="headerlink" title="1. Hardware configuration requirements"></a>1. Hardware configuration requirements</h3><blockquote><p>windows 11 or windows 10 version 2004 and higher (internal version 19041 and higher)</p></blockquote><h3 id="2-Learning-Tutorial"><a href="#2-Learning-Tutorial" class="headerlink" title="2. Learning Tutorial"></a>2. Learning Tutorial</h3><blockquote><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/wsl/install">Microsoft Learn Official Learning WSL Tutorial</a></li><li><a href="https://blog.csdn.net/sandonz/article/details/120854876">sandonz About WSL Ubuntu 20.04 and its GUI installation and configuration</a> Application of the tutorial can achieve windows comes with remote desktop connection service, although more lagging but the effect is significant (It is worth noting that the tutorial source change for 20.04 is particularly good, be sure to replace the source in the tutorial in time. In my previous use of ubuntu 22.04 when the source change problem has always bothered me.)</li><li><a href="https://blog.csdn.net/qq_41460654/article/details/118026986">DongKuKu: How to enable CPU virtualization on Windows PC</a></li></ol></blockquote><h3 id="3-Practice-process"><a href="#3-Practice-process" class="headerlink" title="3. Practice process"></a>3. Practice process</h3><h4 id="3-0-Basic-settings"><a href="#3-0-Basic-settings" class="headerlink" title="3.0 Basic settings"></a>3.0 Basic settings</h4><blockquote><p>Search in ‘Start’ button for ‘Enable or disable windows features’<br><img src="/2023/02/07/%5BWSL%20Learning%20Record%5D/%E5%90%AF%E7%94%A8%E6%88%96%E5%85%B3%E9%97%ADwindows%E5%8A%9F%E8%83%BD.png" alt="Enable or disable windows features"><br>Click to check all the options involved in the following pictures, be aware that Hyper-V may not be able to check all, to modify the BIOS to enable the CPU virtualization function. There are some details in <a href="https://blog.csdn.net/qq_41460654/article/details/118026986">DongKuKu: How to enable CPU virtualization on Windows PC? </a>This step is very important, if you don’t turn on Hyper-V, you won’t be able to upgrade WSL2, which will lead to many bugs and the rviz2 and rqt_graph in ROS2 can’t be turned on in the windows interface. (Of course, you will have to download python Qt-5 to open these interfaces. )<img src="/2023/02/07/%5BWSL%20Learning%20Record%5D/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B9%B3%E5%8F%B0.png" alt="Virtual Machine Platform"><img src="/2023/02/07/%5BWSL%20Learning%20Record%5D/%E9%80%82%E7%94%A8Linux%E7%9A%84Windows%E5%AD%90%E7%B3%BB%E7%BB%9F.png" alt="Windows subsystem for Linux"><br><img src="/2023/02/07/%5BWSL%20Learning%20Record%5D/Windows%E8%99%9A%E6%8B%9F%E7%A8%8B%E5%BA%8F%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0.png" alt="Windows virtual program monitoring platform"><br><img src="/2023/02/07/%5BWSL%20Learning%20Record%5D/Hyper-V.png" alt="Hyper-V"></p></blockquote><h4 id="3-1-Download-and-install-windows-subsystem-for-Linux-wsl-and-ubuntu-20-04"><a href="#3-1-Download-and-install-windows-subsystem-for-Linux-wsl-and-ubuntu-20-04" class="headerlink" title="3.1 Download and install windows subsystem for Linux (wsl) and ubuntu 20.04"></a>3.1 Download and install windows subsystem for Linux (wsl) and ubuntu 20.04</h4><h5 id="3-1-1"><a href="#3-1-1" class="headerlink" title="3.1.1"></a>3.1.1</h5><p>Type directly into PowerShell or CMD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --intsall<br></code></pre></td></tr></table></figure><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --list --online <span class="hljs-comment">#View downloadable Linux versions</span><br>wsl --install -d Ubuntu-xx.xx <span class="hljs-comment">#Download the corresponding Ubuntu version you need, I chose the familiar Ubuntu-22.04</span><br></code></pre></td></tr></table></figure><p>You can also download Ubuntu directly from the app store.<br>After downloading and opening <code>Ubuntu 20.04</code> some errors may appear, at this time directly replace <code>wsl</code> with 1, the command is as follows: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --set-version 1<br></code></pre></td></tr></table></figure><p>Open <code>Ubuntu 20.04</code> again and you will see Wait for a few minutes.<br>By the time we are asked to enter our password, the configuration is ready, and it’s really a lot faster than a dual system installation of Ubuntu.</p><h4 id="3-2-Replace-WSL-with-WSL2"><a href="#3-2-Replace-WSL-with-WSL2" class="headerlink" title="3.2 Replace WSL with WSL2"></a>3.2 Replace WSL with WSL2</h4><blockquote><p>Note: This step cannot be completed without turning on all the options of Hpyer-V and will lead to several problems</p><ol><li>Unable to see <code>rqt_graph</code> or <code>rviz2</code> visual interfaces on <code>windows</code> interface</li><li>The connection between different terminals of ROS seems to be broken, I have tried to open in a windows terminal tab<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;<span class="hljs-built_in">source</span> /opt/ros/foxy/setup.bash<br>&gt;ros2 run demo_nodes_py talker<br></code></pre></td></tr></table></figure>Open another termimal tab<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;<span class="hljs-built_in">source</span> /opt/ros/foxy/setup.bash<br>&gt;ros2 run demo_nodes_py listener<br></code></pre></td></tr></table></figure>There is no communication between their two nodes, and there is no node graph for <code>rqt_graph</code>. It is very simple, after opening Hyper-V in the <code>windows terminal</code> change.</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl -l -v<br>wsl --set-default-version 2<br><span class="hljs-comment"># Or for a particular Linux</span><br>wsl --set-version Ubuntu-xx.xx 2<br></code></pre></td></tr></table></figure><h4 id="3-3-Modify-the-memory-occupied-by-WSL2-which-can-reduce-the-possibility-of-WSL-blue-screen"><a href="#3-3-Modify-the-memory-occupied-by-WSL2-which-can-reduce-the-possibility-of-WSL-blue-screen" class="headerlink" title="3.3 Modify the memory occupied by WSL2, which can reduce the possibility of WSL blue screen"></a>3.3 Modify the memory occupied by WSL2, which can reduce the possibility of WSL blue screen</h4><blockquote><p>Reference <a href="https://blog.csdn.net/lian740930980/article/details/127638402#:~:text=%E8%A7%A3%E5%86%B3WSL2%E4%B8%ADVmmem%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E8%BF%87%E5%A4%A7%E9%97%AE%E9%A2%98%20%E6%95%99%E7%A8%8B%20%E8%B5%B7%E5%9B%A0%20Windows%20%E7%9A%84linux%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%9C%80%E5%A4%A7%20%E5%8D%A0%E7%94%A8%20%E5%8F%AF%E5%88%B0%E6%9C%AC%E6%9C%BA%E5%99%A8%E7%9A%8480%25%EF%BC%8C%E6%89%80%E4%BB%A5%E5%BF%85%E9%A1%BB%E9%99%90%E5%88%B6%E4%B8%80%E4%B8%8B%E5%AE%83%E7%9A%84%E6%80%A7%E8%83%BD%E6%9D%A5%E8%BE%BE%E5%88%B0%E4%BC%98%E5%8C%96%E7%9B%AE%E7%9A%84%20%E4%BC%98%E5%8C%96,%E5%86%85%E5%AD%98%20%E4%B8%8A%E9%99%90%EF%BC%8C%E8%BF%99%E9%87%8C%E6%88%91%E9%99%90%E5%88%B6%E6%9C%80%E5%A4%A72gb%EF%BC%8C%E5%8F%AF%E6%A0%B9%E6%8D%AE%E8%87%AA%E8%BA%AB%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE%E8%AE%BE%E7%BD%AE%20%5B%20wsl2%20%5D%20memory%3D2GB%20swap%3D0%20localhostForwarding%3Dtrue">Tiantiandechuxia: Solve the problem of excessive memory usage of Vmmem in WSL2</a></p></blockquote><h4 id="3-4-Installing-ROS-foxy"><a href="#3-4-Installing-ROS-foxy" class="headerlink" title="3.4 Installing ROS foxy"></a>3.4 Installing ROS foxy</h4><blockquote><p>Since we have changed the source in the previous work next you can directly install ROS.<br>The most standard installation method directly refers to the installation method on the ROS website <a href="https://docs.ros.org/en/foxy/Installation/Ubuntu-Install-Debians.html">ROS foxy Installation</a><br>Once installed, you can try</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;<span class="hljs-built_in">source</span> /opt/ros/foxy/setup.bash<br>&gt;ros2 run demo_nodes_py talker<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;<span class="hljs-built_in">source</span> /opt/ros/foxy/setup.bash<br>&gt;ros2 run demo_nodes_py listener<br></code></pre></td></tr></table></figure><p>So far, the installation of ROS (Foxy) in WSL environment and successful.</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>WSL/WSL2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS Learning Record [V]</title>
    <link href="/2022/08/27/%5BROS%20Learning%20Record%5D%20V/"/>
    <url>/2022/08/27/%5BROS%20Learning%20Record%5D%20V/</url>
    
    <content type="html"><![CDATA[<h1 id="ROS-Learning-Record-V-How-to-add-the-necessary-dependencies-to-ROS-x2F-Noetic-for-Win-rosdep"><a href="#ROS-Learning-Record-V-How-to-add-the-necessary-dependencies-to-ROS-x2F-Noetic-for-Win-rosdep" class="headerlink" title="ROS Learning Record [V]: How to add the necessary dependencies to ROS&#x2F;Noetic for Win (rosdep)"></a>ROS Learning Record [V]: How to add the necessary dependencies to ROS&#x2F;Noetic for Win (rosdep)</h1><blockquote><p>Recently, I started to switch to ROS for Windows in order to enable more devices to connect to ROS, and I encountered some problems. </p><ol><li>Unable to compile the problem, how to solve it? Refering to <a href="https://blog.csdn.net/qq_36651243/article/details/115689930">CSDN:Lige Mo’s</a> essay，downloading  ‘Ninja’ to the system variables and it will be solved.</li><li>The problem of not downloading dependencies when compiling is described in detail in the following article</li></ol></blockquote><h3 id="Dependencies-cannot-be-downloaded-when-compiling"><a href="#Dependencies-cannot-be-downloaded-when-compiling" class="headerlink" title="Dependencies cannot be downloaded when compiling"></a>Dependencies cannot be downloaded when compiling</h3><p>This problem may occur when we compiling with ROS:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Could not find a package configuration file provided by<br> <span class="hljs-string">&quot;industrial_robot_status_interface&quot;</span> with any of the following names:<br></code></pre></td></tr></table></figure><p><img src="/2022/08/27/%5BROS%20Learning%20Record%5D%20V/%E9%97%AE%E9%A2%98.png" alt="Dependencies need to be re-downloaded"><br>It is easy to solve this dependency problem on Ubuntu by referring to <a href="https://blog.csdn.net/gyxx1998/article/details/118153079">CSDN:BingqilingA’s blog</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install ros-melodic-ur-client-library<br></code></pre></td></tr></table></figure><p>But on windows we can only use git or chocolate, so I looked around for a tutorial and found that I could download the git package and use rosdep to import it. <a href="https://github.com/gavanderhoorn/industrial_robot_status_controller">GitHub:gavanderhoorn&#x2F;industrial_robot_status_controller</a><br><img src="/2022/08/27/%5BROS%20Learning%20Record%5D%20V/%E8%87%AA%E8%A1%8C%E4%B8%8B%E8%BD%BDgit%E5%8C%85.png" alt="Download git package by yourself"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; git -C catkin_ws/src <span class="hljs-built_in">clone</span> https://github.com/gavanderhoorn/industrial_robot_status_controller.git<br>&gt; <span class="hljs-comment">#If this doesn&#x27;t work, download and extract directly to src</span><br>&gt; rosdep update<br>&gt; rosdep install --from-paths src -i<br>&gt; <span class="hljs-built_in">cd</span> catkin_ws<br></code></pre></td></tr></table></figure><p>The problem of rosdep under Windows can be solved in this way.</p>]]></content>
    
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS Learning Record [IV]</title>
    <link href="/2022/07/20/%5BROS%20Learning%20Record%5D%20IV/"/>
    <url>/2022/07/20/%5BROS%20Learning%20Record%5D%20IV/</url>
    
    <content type="html"><![CDATA[<h1 id="ROS-Learning-Record-IV-About-“subscribing-to-multiple-topics-and-aggregating-callback-messages-in-ROS”-and-“UR5-Receiving-Joint-Messages”"><a href="#ROS-Learning-Record-IV-About-“subscribing-to-multiple-topics-and-aggregating-callback-messages-in-ROS”-and-“UR5-Receiving-Joint-Messages”" class="headerlink" title="ROS Learning Record [IV]: About “subscribing to multiple topics and aggregating callback messages in ROS” and “UR5 Receiving Joint Messages”."></a>ROS Learning Record [IV]: About “subscribing to multiple topics and aggregating callback messages in ROS” and “UR5 Receiving Joint Messages”.</h1><h2 id="1-Subscribe-to-multiple-topics-in-ROS-and-aggregate-callback-messages-for-processing"><a href="#1-Subscribe-to-multiple-topics-in-ROS-and-aggregate-callback-messages-for-processing" class="headerlink" title="1. Subscribe to multiple topics in ROS and aggregate callback messages for processing."></a>1. Subscribe to multiple topics in ROS and aggregate callback messages for processing.</h2><blockquote><ul><li>In the course of my study, I need to use the operation of collecting multiple subscription contents into a single function for processing.</li><li>But the general way of subscribing on the web cannot get callback parameters, so I took a lot of wrong turns, for example</li></ul><ol><li>Get the Memory-Address and use ctypes in python to do an address content extraction, refer to (<a href="https://www.cnblogs.com/pfeiliu/p/12129187.html#:~:text=%E5%9C%A8python%E4%B8%AD%EF%BC%8C%E9%80%9A%E8%BF%87id%E8%8E%B7%E5%8F%96%E5%8F%98%E9%87%8F%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%EF%BC%8C%E9%82%A3%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%91%A2%EF%BC%9F%20import%20ctypes%20value%20%3D%20%27hello%20world%27%20%23,%3D%20ctypes.cast%20%28address%2C%20ctypes.py_object%29.value%20%23%20%E8%AF%BB%E5%8F%96%E5%9C%B0%E5%9D%80%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%20print%20%28address%2Cget_value%29">Getting data by memory address</a>)，but the results are poor, presumably because ROS itself is strictly encapsulated so that the usual way of extracting memory data is not available;</li><li>Calling the methods in the <strong><code>rospy.topics.Subscriber</code></strong> function also fails to solve the problem: <img src="/2022/07/20/%5BROS%20Learning%20Record%5D%20IV/Subscriber%E6%97%A0%E6%B3%95%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98.png" alt="Subscriber cannot solve the problem.png"><br>Then I found this two tutorials:<br>(1) <a href="https://blog.csdn.net/muyiyushan/article/details/118418040">Multi-sensor time synchronization with message_filter</a><br>(2) <a href="https://blog.csdn.net/chishuideyu/article/details/77479758">ROS official tutorial –the use of message_filter</a></li></ol></blockquote><p>Attached is a lines example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> message_filters<br><span class="hljs-comment">#---------------------Subscriber----------------------</span><br>sub1 = message_filters.Subscriber(<span class="hljs-string">&#x27;/topic1&#x27;</span> , msg) <br><span class="hljs-comment">#message_filters.Subscriber the same usage as rospy.Subscriber</span><br>sub2= message_filters.Subscriber(<span class="hljs-string">&#x27;/topic2&#x27;</span> , msg) <br><br><span class="hljs-comment">#---------------------Callback Collection-----------------------</span><br>ts = message_filters.TimeSynchronizer([sub1,sub2],<span class="hljs-number">1</span>)<br>ts.registerCallback( <span class="hljs-string">&#x27;Functions to be passed in&#x27;</span> )<br><span class="hljs-comment">#---------------------END----------------------</span><br></code></pre></td></tr></table></figure><p>The above is only using the template topic.</p><h2 id="二、UR5-Receive-joint-information"><a href="#二、UR5-Receive-joint-information" class="headerlink" title="二、UR5 Receive joint information"></a>二、UR5 Receive joint information</h2><blockquote><p>During the experiment, I wanted to collect information about the joints of the UR5 robot arm, but when I put the rospy.subscriber() function in front of the function that executes the UR5 control (motion), I couldn’t go to the next function. <a href="https://www.daimajiaoliu.com/daima/56971f320bc6c00">Unknown author operating UR5 robotic arm</a><img src="/2022/07/20/%5BROS%20Learning%20Record%5D%20IV/topic.png" alt="topic.png"><br>In other words <strong>the subscription will only take effect when there is a joint change in the UR5 arm</strong>, so you have to make the arm move or put the subscription message program after the function that controls the motion of the arm</p></blockquote><p>The sample lines are as follows</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">rospy.Subscriber(<span class="hljs-string">&#x27;/joint_states&#x27;</span>,JointState,getUR5State)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getUR5State</span>:<br>UR5state = state.position<br>    rospy.loginfo(UR5state)<br></code></pre></td></tr></table></figure><p>Through this year’s study I have a shallow understanding of the powerful ROS system, but there are still many areas to learn, such as <strong>“putting all the nodes into a Lanuch”</strong> or <strong>“making a Qt visual interface “</strong> and <strong>“recieving to force sensor data and other more challenges to face. “</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS Learning Record [III]</title>
    <link href="/2022/05/08/%5BROS%20Learning%20Record%5D%20III/"/>
    <url>/2022/05/08/%5BROS%20Learning%20Record%5D%20III/</url>
    
    <content type="html"><![CDATA[<h1 id="【ROS-Learning-Record-III-About-ROS-controling-real-UR5-and-handling-joystick-control-simulation-UR5"><a href="#【ROS-Learning-Record-III-About-ROS-controling-real-UR5-and-handling-joystick-control-simulation-UR5" class="headerlink" title="【ROS Learning Record [III]: About ROS controling real UR5 and handling (joystick) control simulation UR5"></a>【ROS Learning Record [III]: About ROS controling real UR5 and handling (joystick) control simulation UR5</h1><h3 id="一、ROS-control-of-real-UR5-processes"><a href="#一、ROS-control-of-real-UR5-processes" class="headerlink" title="一、ROS control of real UR5 processes"></a>一、ROS control of real UR5 processes</h3><ol><li>UR5 can be controlled by synchronizing the real-time state of the controller but not by movit!</li><li>Because of the version iteration makes “ur_morden_driver” unavailable, RAIN’s (<a href="https://github.com/inmo-jang/rain_teleoperation/blob/master/xbox_teleop.md">Inmo Jang</a>) code cannot be used and should be re-tooling.<br><img src="/2022/05/08/%5BROS%20Learning%20Record%5D%20III/%E9%97%AE%E9%A2%98.png" alt="问题"></li></ol><h4 id="二、Joystick-control-simulation-UR5-learning-process"><a href="#二、Joystick-control-simulation-UR5-learning-process" class="headerlink" title="二、Joystick control simulation UR5 learning process"></a>二、Joystick control simulation UR5 learning process</h4><ol><li>Using <a href="https://github.com/inmo-jang/rain_teleoperation/blob/master/xbox_teleop.md">Inmo Jang’s</a> code we can relize gazebo controlling, but the UR5’s model in the gazebo still twitches，it could be that Joystick did not take over control.</li><li>The next step is to control UR5 with Phantom after the handle!</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS Learning Record [II]</title>
    <link href="/2022/03/07/%5BROS%20Learning%20Record%5D%20II/"/>
    <url>/2022/03/07/%5BROS%20Learning%20Record%5D%20II/</url>
    
    <content type="html"><![CDATA[<h1 id="ROS-Learning-Record-II"><a href="#ROS-Learning-Record-II" class="headerlink" title="ROS Learning Record [II]"></a>ROS Learning Record [II]</h1><blockquote><p>In the previous article “ROS Learning Record [I]” I can already get the information of publish in Sensor_msgs through Subscriber, this time I directly want to put <a href="https://github.com/sunghowoo/Control-of-two-UR5s-by-two-phantom-omnies-">sunghowoo’s</a>“summer_gazebo” repository into reproduction. In fact, the repository is fine, but there is always a problem in the launch, I checked is <code>robot_state_publisher</code> did not receive the messages. After solving the problem I want to record the process of debuging.</p></blockquote><h3 id="Causes"><a href="#Causes" class="headerlink" title="Causes"></a>Causes</h3><p>After I put all the resources in place, this problem appeared like this.<br><img src="/2022/03/07/%5BROS%20Learning%20Record%5D%20II/%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98.png" alt="Problems occured"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">.....<br>[ERROR] [xxx]:Error document empty.<br>[robot_state_publisher-5] process has died<br>.....<br></code></pre></td></tr></table></figure><p>I was very distressed, so I went to ROS_Wiki looking for some possible resolution. <img src="/rosnode_ping.png" alt="rosnode_ping"><br>And I got this: <a href="http://wiki.ros.org/robot_state_publisher/Troubleshooting#:~:text=By%20default%20the%20robot%20state%20publisher%20looks%20for,and%20therefore%20does%20not%20have%20a%20root%20link.">robot_state_publisher&#x2F;Troubleshooting</a><br><img src="/2022/03/07/%5BROS%20Learning%20Record%5D%20II/TroubleShooting.png" alt="TroubleShooting"><br>So I tried the line </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$rosnode</span> ping robot_state_publisher<br></code></pre></td></tr></table></figure><p>This process has been died so it must be unresponsive<img src="/2022/03/07/%5BROS%20Learning%20Record%5D%20II/process_died.png" alt="process_died.png"><br>Then I tried <code>$rostopic hz joint_states</code> and it appeared as<br><img src="/2022/03/07/%5BROS%20Learning%20Record%5D%20II/joint_states%E5%87%BA%E7%8E%B0.png" alt="joint_states appeared.png"><br>That means <code>joint_states</code> hasn’t publish its joints’ state.</p>]]></content>
    
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS Learning Record [I]</title>
    <link href="/2022/03/05/%5BROS%20Learning%20Record%5D%20I/"/>
    <url>/2022/03/05/%5BROS%20Learning%20Record%5D%20I/</url>
    
    <content type="html"><![CDATA[<h1 id="ROS-Learning-Record-I"><a href="#ROS-Learning-Record-I" class="headerlink" title="ROS Learning Record [I]"></a>ROS Learning Record [I]</h1><blockquote><p>Since the open source on github about PhantomOmni-UR5 source code on this computer reproduced a lot of problems, I decided to start from scratch and seriously learn the ROS system framework. The recent targets are as follows: </p><ol><li>How to use the Topic that comes with the ROS system?</li><li>How to use Publish and Subscriber?</li><li>How to use Launch files?</li><li>And some minor details of the above.</li></ol></blockquote><h2 id="1-Use-Subscriber-to-get-the-JointState-in-Sensor-msgs"><a href="#1-Use-Subscriber-to-get-the-JointState-in-Sensor-msgs" class="headerlink" title="1. Use Subscriber to get the JointState in Sensor_msgs"></a>1. Use <code>Subscriber</code> to get the JointState in Sensor_msgs</h2><p>In my recent studies, I noticed that for the source code Omni.cpp to connect the <code>Publisher</code> with the <code>Subscirber</code>, it must follow the “(Topic) name consistency” rule. For example</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*************Publisher Code Side******************/</span><br>ros::Publisher joint_states;<br>joint_topic &lt;&lt; <span class="hljs-string">&quot;joint_states&quot;</span>;<br>joint_pub = n.<span class="hljs-built_in">advertise</span>&lt;sensor_msgs::JointState&gt;(joint_topic.<span class="hljs-built_in">str</span>(), <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure><p>Notice that the name of this node is “joint_states”<br>Then the Subscriber’s code must be receiving “joint_states”</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><br><span class="hljs-comment">/****************Subscriber Code Side***********************/</span><br>ros::Subscriber stateSubscriber = n.<span class="hljs-built_in">subscribe</span>(<span class="hljs-string">&quot;joint_states&quot;</span>, <span class="hljs-number">1</span> ,stateCallback);<br><span class="hljs-comment">//Here stateCallback is a registered callback function that is responsible for processing the received informatioIt is worth noting that pkg = &quot;xxx&quot;`` is the name that was used previously when creating this feature packagen</span><br><br></code></pre></td></tr></table></figure><p>After compiling, we will see that “joit_states” sends a message to the stateSubscriber!<br><img src="/2022/03/05/%5BROS%20Learning%20Record%5D%20I/stateSubscriber.png" alt="正确的加入节点方式"><br><strong>It is worth noting that</strong> the <code>stateSubscriber</code> node must be under the larger <code>Geomagic</code> group, otherwise it will appear <code>stateSubscriber</code>is excluded, like the picture shown below!<br><img src="/2022/03/05/%5BROS%20Learning%20Record%5D%20I/stateSubscriber_2.png" alt="仅加入节点"><br>I don’t know why this is happening yet, but what I do know is that if you put the <code>stateSubscriber</code> node into the same Group as the joint_states in the launch, it’s fine, like codes demonstrates as the follow lines:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs launch">&lt;launch&gt;<br>&lt;arg name=&quot;device_name&quot; default = &quot;Geomagic1&quot;/&gt;<br>&lt;param name = &quot;publish_rate&quot; type=&quot;int&quot; value = &quot;100&quot;/&gt;<br>&lt;group ns=&quot;$(arg device_name)&quot;&gt;<br>&lt;node name = &quot;(arg device_name)&quot; pkg = &quot;geomagic_control&quot; type = &quot;omni&quot; output = &quot;screen&quot;&gt;<br>...<br>&lt;/node&gt;<br>&lt;node name =&quot;omniSubscriber&quot; pkg = &quot;omniSubscriber&quot; type = &quot;omniSubscriber&quot; output = &quot;screen&quot;&gt;<br>&lt;/node&gt;<br>&lt;/group&gt;<br>&lt;/launch&gt;<br></code></pre></td></tr></table></figure><p>It is worth noting that <code>pkg = &quot;xxx&quot;</code> is the name that was used previously when creating this feature package</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">catkin_make &lt;pkg_name&gt; depend_1 depend_2 .......<br></code></pre></td></tr></table></figure><blockquote><p>This phase of learning gave me a deeper insight into how to create nodes to listen for messages, and was particularly relevant to the subsequent re-creation of a UR5 model!</p></blockquote><hr>]]></content>
    
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Guide of building a personal blog and avoid  pitfalls.</title>
    <link href="/2022/01/27/Guide%20of%20building%20a%20personal%20static%20blog%20and%20avoid%20pitfalls/"/>
    <url>/2022/01/27/Guide%20of%20building%20a%20personal%20static%20blog%20and%20avoid%20pitfalls/</url>
    
    <content type="html"><![CDATA[<h1 id="Guide-of-building-a-personal-blog-and-avoid-pitfalls"><a href="#Guide-of-building-a-personal-blog-and-avoid-pitfalls" class="headerlink" title="Guide of building a personal blog and avoid  pitfalls."></a>Guide of building a personal blog and avoid  pitfalls.</h1><p>Recently, I surfed on bilibili and found a tutorial named: <a href="https://www.bilibili.com/video/BV1ts4y1f7Gu/?spm_id_from=333.1007.tianma.3-3-7.click&vd_source=ec9d8b7bb49c5fd86838483496f8d6ed">Super detailed! 0 cost to build a personal website! 【Recommended Collection】–Xiaoyu Boi</a>. Then I thought I could build up my own static blog to record my codes and some reflections about my work and life.</p><h2 id="I-Install-git-tools-Node-js-and-Hexo-on-your-system"><a href="#I-Install-git-tools-Node-js-and-Hexo-on-your-system" class="headerlink" title="I. Install git tools, Node.js and Hexo on your system"></a>I. Install <strong>git tools</strong>, <strong>Node.js</strong> and <strong>Hexo</strong> on your system</h2><ol><li><p>Browse the <a href="https://git-scm.com/">git official website</a> on the web to download the corresponding version of git for your computer. </p></li><li><p>Test it on the terminal.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git -v<br></code></pre></td></tr></table></figure><p>If it pops up the following message</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git version 2.24.3 (xxx Git-128)<br></code></pre></td></tr></table></figure><p>That means the installation is successful</p></li><li><p>Browse <a href="https://nodejs.org/zh-cn/">Node.js</a> to install the corresponding node.js</p></li><li><p>The same test for <code>node -v </code> pops up <code>vxx.xx</code> is installed successfully</p></li><li><p>Browse <a href="https://hexo.io/zh-cn/">Hexo</a> and follow the prompts on the home page of the site by typing in the terminal.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g <span class="hljs-comment">#Use npm to download hexo as a whole, if you don&#x27;t have npm you also need to download npm</span><br>hexo init xxx.github.io <span class="hljs-comment"># Use hexo to initialize xxx.github.io, create a hexo folder before this action and then use this command</span><br></code></pre></td></tr></table></figure><p><em><em>Here to emphasize why this name, is to create a repository of the same name on Github later, to store the files of the pushed pages, preferably the same, the later is not prone to problems</em></em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> xxx.github.io <span class="hljs-comment">#Enter the xxx.github.io folder</span><br>npm install <br>hexo server <span class="hljs-comment">#This step to turn on the hexo service is just to test whether the hexo installation is complete or not. </span><br></code></pre></td></tr></table></figure><p>Open your browser and type localhost:4000 and the hello screen will appear<br><img src="/2022/01/27/Guide%20of%20building%20a%20personal%20static%20blog%20and%20avoid%20pitfalls/start.jpg" alt="startPage"></p></li></ol><h2 id="II-Hosted-code-on-your-GitHub"><a href="#II-Hosted-code-on-your-GitHub" class="headerlink" title="II. Hosted code on your GitHub."></a>II. Hosted code on your GitHub.</h2><ol><li>Sign up for GitHub.</li><li>Generate SSH key, refer to <a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo build personal website detailed tutorial</a><br>This step can facilitate pushing the code every time later.</li><li>Create xxx.github.io repository on github named xxx.github.io. Setting Public makes the whole repository accessible to the outside world, because this repository is accessible, so it is advisable to use Hexo’s push feature <code>Hexo deploy</code> to prevent source code leakage.</li></ol><p><img src="/2022/01/27/Guide%20of%20building%20a%20personal%20static%20blog%20and%20avoid%20pitfalls/%E4%BB%93%E5%BA%93.jpg" alt="Create a repository"><br>The construction of the warehouse is completed. Then we could push files into the repository which are writen by ourselves directly (refer to <a href="https://hexo.io/zh-cn/docs/github-pages">Hexo official website Github Pages Deploy Hexo</a>), or just push pages for keeping the source code from being pushed to the github repository (Refer to <a href="https://hexo.io/zh-cn/docs/one-command-deployment">One Click Deployment</a>).</p><ol start="4"><li>Install hexo-deployer-git<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure></li><li>In the &#96;&#96;&#96;_config.yml&#96;&#96; file, add<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/xxx/xxx.github.io<br>  <span class="hljs-comment"># example, https://github.com/hexojs/hexojs.github.io</span><br>  branch: main<br></code></pre></td></tr></table></figure></li><li>Type in the Command<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure>Note that <code>hexo deploy </code> will require us to type in github account and password, personal recommendation is to use github token function, and then enter the token after entering the github account. Especially to be careful, do not use the keyboard ctrl + c copy paste token is likely to fail, it is better to use the right mouse button copy paste, this is the pit that the author previously said needs to be avoided.</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
